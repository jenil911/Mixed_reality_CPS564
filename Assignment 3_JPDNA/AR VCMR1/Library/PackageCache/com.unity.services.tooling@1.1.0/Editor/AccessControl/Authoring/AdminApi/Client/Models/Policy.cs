//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Tooling.Editor.AccessControl.Authoring.Client.Http;



namespace Unity.Services.Tooling.Editor.AccessControl.Authoring.Client.Models
{
    /// <summary>
    /// A Policy consists of an array of Policy statements that make up the Resource Policy
    /// </summary>
    [Preserve]
    [DataContract(Name = "Policy")]
    internal class Policy
    {
        /// <summary>
        /// A Policy consists of an array of Policy statements that make up the Resource Policy
        /// </summary>
        /// <param name="statements">statements param</param>
        [Preserve]
        public Policy(List<ProjectStatement> statements = default)
        {
            Statements = statements;
        }

        /// <summary>
        /// Parameter statements of Policy
        /// </summary>
        [Preserve]
        [DataMember(Name = "statements", EmitDefaultValue = false)]
        public List<ProjectStatement> Statements{ get; }
    
        /// <summary>
        /// Formats a Policy into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (Statements != null)
            {
                serializedModel += "statements," + Statements.ToString();
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a Policy as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            return dictionary;
        }
    }
}
